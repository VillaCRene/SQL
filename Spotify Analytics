# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#I inserted the Spotify Data .csv file into the table and explored the data using SQLite.

#Spotify Queries
--Show all data from the table
	SELECT * FROM BIT_DB.SpotifyData;

--How many times do each artist appear?
	SELECT artist_name, count(*) AS song_count
		FROM BIT_DB.Spotifydata
		GROUP BY artist_name
		ORDER BY song_count DESC, artist_name ASC
		;


--Which track had the highest popularity?
	SELECT track_name, artist_name, popularity
		FROM BIT_DB.Spotifydata
		ORDER BY popularity DESC
		LIMIT 1
		;

--Which 5 tracks had the highest loudness measurement?
	SELECT track_name, artist_name, loudness
		FROM BIT_DB.Spotifydata
		ORDER BY loudness DESC
		LIMIT 5
		;


--Which tracks had the fastes tempo?
	SELECT track_name, artist_name, tempo
		FROM BIT_DB.Spotifydata
		ORDER BY tempo DESC
		LIMIT 10
;
